---
# coe-netapp-nas
- name: Fetch volumes from netapp
  netapp.ontap.na_ontap_rest_info:
    hostname: "{{ netapp_managementLIF }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
    validate_certs: false
    gather_subset:
      - storage/volumes
    parameters:
      name: "stormshift_{{ inventory_hostname }}_*"
      # name: "stormshift_{{ inventory_hostname }}_pvc_ee8dd549*"
  register: ontap_info_vol

- name: Print volumes to delete
  debug:
    msg: "{{ ontap_info_vol.ontap_info['storage/volumes'] }}"

- name: Delete all Volumes
  ansible.builtin.uri:
    url: "https://{{ netapp_managementLIF }}{{ item._links.self.href }}"
    user: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
    validate_certs: false
    method: DELETE
    force_basic_auth: true
  with_items: "{{ ontap_info_vol.ontap_info['storage/volumes'].records }}"

# coe-netapp-san
- name: Fetch LUNs from netapp
  netapp.ontap.na_ontap_rest_info:
    hostname: "{{ netapp_managementLIF }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
    validate_certs: false
    gather_subset:
      - storage/luns
    parameters:
      name: "*/stormshift_{{ inventory_hostname }}_*"
      # name: "*/stormshift_{{ inventory_hostname }}_pvc_0fd108*"
  register: ontap_info_lun

- name: Print LUNs to delete
  debug:
    msg: "{{ ontap_info_lun.ontap_info['storage/luns'] }}"

- name: Delete all LUN's
  ansible.builtin.uri:
    url: "https://{{ netapp_managementLIF }}{{ item._links.self.href }}"
    user: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
    validate_certs: false
    method: DELETE
    force_basic_auth: true
  with_items: "{{ ontap_info_lun.ontap_info['storage/luns'].records }}"
