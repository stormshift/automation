---

- name: "Deploy VM {{target_namespace}}/{{ vm_name }}"
  kubevirt.core.kubevirt_vm:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    state: present
    running: true # default
    wait: true
    wait_timeout: 480    
    name: "{{ vm_name }}"
    namespace: "{{ target_namespace }}"
    labels:
      vm_group: "{{ target_namespace }}"
    data_volume_templates:
      - metadata:
          name: "{{ vm_name }}-root"
        spec:
          storage:
            accessModes:
              - ReadWriteMany
            storageClassName: "{{ vm_rootdisk_storageclass }}"
            resources:
              requests:
                storage: "{{ vm_rootdisk_size }}"
          source:
            blank: {}
      - metadata:
          name: "{{ vm_name }}-cdrom"
        spec:
          storage:
            accessModes:
              - ReadWriteMany
            storageClassName: "{{ agent_iso_storage_class }}"
            resources:
              requests:
                storage: "2Gi"
          source:
            pvc:
              name: "{{ inventory_hostname }}-agent-iso"
              namespace: "{{ target_namespace }}"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: vm_group
                  operator: In
                  values:
                  - "{{ target_namespace }}"
              topologyKey: kubernetes.io/hostname

      volumes:
        - name: cdrom
          dataVolume:
            name: "{{ vm_name }}-cdrom"
        - name: root
          dataVolume:
            name: "{{ vm_name }}-root"
      networks:
        - name: coe
          multus:
            networkName: "{{ vm_net_attach_def | default('coe-bridge') }}"
      domain:
        cpu:
          cores: "{{ vm_cores | int }}"
          sockets: 1
          threads: 1 # Hyperthreading is disabled at ISAR cluster
        memory:
          guest: "{{ vm_memory_gb }}Gi"
        resources:
          requests:
            memory: "{{ vm_memory_gb }}Gi"
          # https://docs.openshift.com/container-platform/4.14/virt/install/preparing-cluster-for-virt.html#virt-cluster-resource-requirements_preparing-cluster-for-virt
          # Based on the calculation:
          # Memory overhead per virtual machine ≈ (1.002 × requested memory) \
          #               + 218 MiB \
          #               + 8 MiB × (number of vCPUs) \
          #               + 16 MiB × (number of graphics devices) \
          #               + (additional memory overhead)
          #

          # echo "(16384 * 1.002) + 218 + (8*8)" | bc -l
          #  => 16698.768
          # + 20Mib because of https://docs.openshift.com/container-platform/4.15/virt/monitoring/virt-runbooks.html#virt-runbook-KubevirtVmHighMemoryUsage
          #   echo "(16384 * 1.002) + 218 + (8*8) + 20 " | bc -l
          #  => 16718.768
          #  round: 16720Mi
          limits:
            memory: "{{ ( ( ( vm_memory_gb * 1.002 ) + 0.218 + ( 0.008 *  vm_cores ) ) * 1024 ) | round(0) | int }}Mi"
        devices:
          disks:
            - name: root
              bootOrder: 1
              disk:
                bus: virtio
            - name: cdrom
              bootOrder: 2
              cdrom:
                bus: sata
              shareable: true
          interfaces:
            - bridge: {}
              macAddress: "{{ vm_network_mac_address }}"
              model: virtio
              name: coe
