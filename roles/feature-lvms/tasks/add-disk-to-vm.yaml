---
- name: Create empty disk data volume {{ vm_name }}
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"
    state: present
    wait: yes
    wait_condition:
      type: Bound
      status: True
    definition:
      apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        name: "{{ vm_name }}-{{ disk_name }}"
        namespace: "{{ target_namespace }}"
        annotations:
          cdi.kubevirt.io/storage.usePopulator: "true"
      spec:
        source:
          blank: {}
        storage:
          resources:
            requests:
              storage: "{{ disk_size }}"
          storageClassName: "{{ disk_storageclass }}"
  register: dataVolume

- name: Hotplug virtual disk to VM {{ vm_name }}
  when: dataVolume is changed
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"
    state: patched
    apply: true
    definition:
      kind: VirtualMachine
      apiVersion: kubevirt.io/v1
      metadata:
        name: "{{ vm_name }}"
        namespace: "{{ target_namespace }}"
      spec:
        template:
          spec:
            domain:
              devices:
                disks:
                  - bootOrder: 1
                    name: root
                    disk:
                      bus: virtio
                  - bootOrder: 2
                    name: cdrom
                    cdrom:
                      bus: sata
                  - bootOrder: 99
                    disk:
                      bus: scsi
                    name: "{{ disk_name }}"
            volumes:
              - name: cdrom
                dataVolume:
                  name: "{{ vm_name }}-cdrom"
              - name: root
                dataVolume:
                  name: "{{ vm_name }}-root"
              - dataVolume:
                  hotpluggable: true
                  name: "{{ vm_name }}-{{ disk_name }}"
                name: "{{ disk_name }}"
  register: diskAdded

- name: Stop VM {{ vm_name }} (hotplug did not work via ansible)
  when: diskAdded is defined and diskAdded is changed
  kubevirt.core.kubevirt_vm:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    state: present
    name: "{{ vm_name }}"
    namespace: "{{ target_namespace }}"
    running: false
    wait: yes
  register: vmStopped

- name: Start VM {{ vm_name }} (hotplug did not work via ansible)
  when: vmStopped is defined and vmStopped is changed
  kubevirt.core.kubevirt_vm:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    state: present
    name: "{{ vm_name }}"
    namespace: "{{ target_namespace }}"
    running: true
    wait: yes
