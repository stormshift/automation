# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------

    - name: Copy kubeconfig to root user on VM
      when: ushift_actually_install
      tags: post, kubecfg
      copy:
        src: /var/lib/microshift/resources/kubeadmin/{{inventory_hostname}}.{{ sysctx_dns_domain }}/kubeconfig
        remote_src: true
        dest: /root/.kube/config
        mode: 600

    - name: Slurp kubeconfig
      when: ushift_actually_install
      tags: post, kubecfg, acm
      ansible.builtin.slurp:
        src: "/root/.kube/config"
      register: slurp_kubeconfig

    - name: Set kubeconfig
      when: ushift_actually_install
      tags: post, kubecfg, acm
      set_fact:
        ushift_kubeconfig: "{{ slurp_kubeconfig['content'] | b64decode }}"

    - name: Create temporary local kubeconfig file
      when: ushift_actually_install
      tags: post, kubecfg
      local_action:
        module: ansible.builtin.tempfile
        state: file
        suffix: temp
      register: temp_kubeconfig

    - name: Fetch kubeconfig from remote
      when: ushift_actually_install
      tags: post, kubecfg
      fetch:
        src: /root/.kube/config
        dest: "{{temp_kubeconfig.path}}"
        flat: true

    - name: Deploy VolumeSnapshotClass
      tags: post,vsc,lvms
      when: false
      local_action:
        module: kubernetes.core.k8s
        kubeconfig: "{{temp_kubeconfig.path}}"
        validate_certs: false
        state: present
        definition: "{{ lookup('template', 'templates/microshift-volumeSnapShotClass.yaml') }}"

    - name: Prepare VolumeSnapshotClass
      tags: post,vsc,lvms
      template:
        src: templates/microshift-volumeSnapShotClass.yaml
        dest: /root/volumeSnapshotClass.yaml

    - name: Deploy sample workload
      tags: post,sample
      when: ushift_actually_install and ushift_deploy_sample_workload
      local_action:
        module: kubernetes.core.k8s
        kubeconfig: "{{temp_kubeconfig.path}}"
        validate_certs: false
        state: present
        definition: "{{ lookup('template', 'templates/microshift-sample-app.yaml') }}"

    - name: Prepare demos
      tags: post,sample
      template:
        src: templates/{{item}}
        dest: /root/{{item}}
      loop:
        - microshift-sample-app.yaml
        - microshift-olm-demo.yaml
        - microshift-gitops-demo.yaml
        - microshift-sample-volumeSnapshot.yaml

    - name: Remove temporary local kubeconfig file
      when: temp_kubeconfig.path is defined
      tags: post, kubecfg
      ansible.builtin.file:
        path: "{{ temp_kubeconfig.path }}"
        state: absent
