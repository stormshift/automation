---

  - name: Create MicroShift VM
    tags: vm
    local_action:
      module: kubevirt.core.kubevirt_vm
      api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
      host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
      validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"
      state: present
      runStrategy: "{{ ocpVirt_runStrategy_running }}" # default
      wait: true
      name: "{{ inventory_hostname }}"
      namespace: "{{ ushift_virt_namespace }}"
      annotations:
        descheduler.alpha.kubernetes.io/evict: "{{ descheduler_evict }}"
      spec:
        domain:
          cpu:
            cores: "{{ vm_cores }}"
            sockets: 1
            threads: 1
          memory:
            guest: "{{vm_memory}}"
          resources:
            requests:
              memory: "{{vm_memory}}"
              cpu: "{{ vm_cores*1000 * 0.5}}m"
          machine:
            type: q35
          devices:
            disks:
            - disk:
                bus: virtio
              name: root-disk
            interfaces:
              - bridge: {}
                macAddress: "{{network_mac_address}}"
                model: virtio
                name: net-0
          clock:
            timezone: Etc/GMT
        networks:
          - multus:
              networkName: coe-bridge
            name: net-0
        volumes:
        - dataVolume:
            name: "{{ inventory_hostname }}-root"
          name: root-disk

      data_volume_templates:
        - metadata:
            name: "{{ inventory_hostname }}-root"
          spec:
            storage:
              storageClassName: "{{ushift_vm_storageclass}}"
              accessModes:
              - ReadWriteMany
              volumeMode: Block
              resources:
                requests:
                  storage: 64Gi
            source:
              pvc:
                namespace: stormshift-vm-templates
                name: "stormshift-template-{{vm_template}}-root"

  - name: Wait for VM to be online
    local_action:
      module: ansible.builtin.wait_for
      host: "{{ inventory_hostname }}.{{ sysctx_dns_domain }}"
      port: 22
      state: started
